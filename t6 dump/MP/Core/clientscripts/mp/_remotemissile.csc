// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;
#include clientscripts\mp\_rewindobjects;

init()
{
    registerclientfield( "missile", "remote_missile_bomblet_fired", 1, 1, "int", ::bomblets_deployed, 0 );
    registerclientfield( "missile", "remote_missile_fired", 1, 2, "int", ::missile_fired, 0 );
}

missile_fired( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
    if ( bnewent && oldval == newval )
        return;

    if ( newval == 1 )
    {
        player = getlocalplayer( localclientnum );
        owner = self getowner( localclientnum );
        clientobjid = getnextobjid( localclientnum );
        objective_add( localclientnum, clientobjid, "invisible", self.origin, self.team, owner );
        objective_onentity( localclientnum, clientobjid, self, 1, 0, 1 );
        self.hellfireobjid = clientobjid;
        self thread destruction_watcher( localclientnum, clientobjid );
        objective_state( localclientnum, clientobjid, "active" );
        objective_seticon( localclientnum, clientobjid, "remotemissile_target" );
        objective_seticonsize( localclientnum, clientobjid, 50 );
    }
    else if ( newval == 2 )
    {
        if ( isdefined( self.hellfireobjid ) )
        {
            self notify( "hellfire_detonated" );
            objective_delete( localclientnum, self.hellfireobjid );
            releaseobjid( localclientnum, self.hellfireobjid );
        }
    }
}

bomblets_deployed( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
    if ( bnewent && oldval == newval )
        return;

    if ( newval == 1 )
    {
        player = getlocalplayer( localclientnum );
        owner = self getowner( localclientnum );
        clientobjid = getnextobjid( localclientnum );
        objective_add( localclientnum, clientobjid, "invisible", self.origin, self.team, owner );
        objective_onentity( localclientnum, clientobjid, self, 1, 0, 1 );
        self thread destruction_watcher( localclientnum, clientobjid );
        objective_state( localclientnum, clientobjid, "active" );
        objective_seticon( localclientnum, clientobjid, "remotemissile_target" );
    }
}

destruction_watcher( localclientnum, clientobjid )
{
    self endon( "hellfire_detonated" );
    self waittill_any( "death", "entityshutdown" );
    wait 0.4;

    if ( isdefined( clientobjid ) )
    {
        objective_delete( localclientnum, clientobjid );
        releaseobjid( localclientnum, clientobjid );
    }
}
