// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;

init()
{
    level._client_flag_callbacks["turret"][2] = ::microwave_open_anim;
    level._client_flag_callbacks["turret"][3] = ::microwave_close_anim;
    level._client_flag_callbacks["turret"][4] = ::microwave_destroy_anim;
    registerclientfield( "turret", "turret_microwave_sounds", 1000, 1, "int", ::turret_microwave_sounds, 0 );
}

turret_microwave_sounds( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
    if ( newval == 1 )
        self thread turret_microwave_sound_start( localclientnum );
    else if ( newval == 0 )
        self notify( "sound_stop" );
}

turret_microwave_sound_start( localclientnum )
{
    self endon( "entityshutdown" );
    self endon( "sound_stop" );
    origin = self gettagorigin( "tag_flash" );
    angles = self gettagangles( "tag_flash" );
    forward = anglestoforward( angles );
    forward = vectorscale( forward, 750 );
    trace = bullettrace( origin, origin + forward, 0, self );
    start = origin;
    end = trace["position"];
    self thread turret_microwave_sound_off_waiter( localclientnum, start, end );
    self playsound( 0, "wpn_micro_turret_start" );
    soundlineemitter( "wpn_micro_turret_loop", start, end );
}

turret_microwave_sound_off_waiter( localclientnum, start, end )
{
    self waittill_any( "sound_stop", "entityshutdown" );
    playsound( 0, "wpn_micro_turret_stop", start );
    soundstoplineemitter( "wpn_micro_turret_loop", start, end );
}

#using_animtree("mp_microwaveturret");

microwave_open_anim( localclientnum, set )
{
    self endon( "entityshutdown" );

    if ( !set )
        return;

    self useanimtree( #animtree );
    self setanim( %o_hpm_open, 1.0, 0.0, 1.0 );
}

microwave_close_anim( localclientnum, set )
{
    if ( !set )
        return;

    self useanimtree( #animtree );
    self setanim( %o_hpm_close, 1.0, 0.0, 1.0 );
}

microwave_destroy_anim( localclientnum, set )
{
    self useanimtree( #animtree );
    self setanim( %o_hpm_destroyed, 1.0, 0.0, 1.0 );
}
