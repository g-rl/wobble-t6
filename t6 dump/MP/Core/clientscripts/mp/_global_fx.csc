// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;
#include clientscripts\mp\_fx;

main()
{
    wave_initial_setting();
    wind_initial_setting();
    r_outdoor_feather();
    level._global_fx_ents = [];
    randomstartdelay = randomfloatrange( -20, -15 );
    global_fx( "rustic_hanging_fx_point", "rustic_hanging_global", "env/light/fx_lights_rustic", randomstartdelay, "fx_lights_rustic_flame" );
    global_fx( "candle_flame_fx_point", "candle_flame_global", "env/light/fx_lights_candle_flame", randomstartdelay );
    global_fx( "lantern_light_fx_point", "lantern_on_global", "env/light/fx_lights_lantern_on", randomstartdelay );
    global_fx( "barrel_fireFX_origin", "global_barrel_fire", "fire/firelp_barrel_pm", randomstartdelay, "fire_barrel_small" );
    global_fx( "ch_streetlight_02_FX_origin", "ch_streetlight_02_FX", "misc/lighthaze", randomstartdelay );
    global_fx( "me_streetlight_01_FX_origin", "me_streetlight_01_FX", "misc/lighthaze_bog_a", randomstartdelay );
    global_fx( "ch_street_light_01_on", "lamp_glow_FX", "misc/light_glow_white", randomstartdelay );
    global_fx( "highway_lamp_post", "ch_streetlight_02_FX", "misc/lighthaze_villassault", randomstartdelay );
    global_fx( "cs_cargoship_spotlight_on_FX_origin", "cs_cargoship_spotlight_on_FX", "misc/lighthaze", randomstartdelay );
    global_fx( "me_dumpster_fire_FX_origin", "me_dumpster_fire_FX", "fire/firelp_med_pm", randomstartdelay, "fire_dumpster_medium" );
    global_fx( "com_tires_burning01_FX_origin", "com_tires_burning01_FX", "fire/tire_fire_med", randomstartdelay );
    global_fx( "icbm_powerlinetower_FX_origin", "icbm_powerlinetower_FX", "misc/power_tower_light_red_blink", randomstartdelay );
    global_fx( "icbm_mainframe_FX_origin", "icbm_mainframe_FX", "props/icbm_mainframe_lightblink", randomstartdelay );
    global_fx( "light_pulse_red_FX_origin", "light_pulse_red_FX", "misc/light_glow_red_generic_pulse", -2 );
    global_fx( "light_pulse_red_FX_origin", "light_pulse_red_FX", "misc/light_glow_red_generic_pulse", -2 );
    global_fx( "light_pulse_orange_FX_origin", "light_pulse_orange_FX", "misc/light_glow_orange_generic_pulse", -2 );
}

r_outdoor_feather()
{
    mapname = getdvar( #"mapname" );
    setsaveddvar( "r_outdoorfeather", "8" );

    switch ( mapname )
    {
        case "mp_uplink":
            setsaveddvar( "r_outdoorfeather", "4" );
            break;
    }
}

wave_initial_setting()
{
    setsaveddvar( "r_waterwavespeed", "1 1 1 1" );
    setsaveddvar( "r_waterwaveamplitude", "0 0 0 0" );
    setsaveddvar( "r_waterwavewavelength", "1 1 1 1" );
    setsaveddvar( "r_waterwavesteepness", "0 0 0 0" );
    setsaveddvar( "r_waterwaveangle", "0 0 0 0" );
    setsaveddvar( "r_waterwavephase", "0 0 0 0" );
    setsaveddvar( "r_waterwavebase", "0" );
}

wind_initial_setting()
{
    mapname = getdvar( #"mapname" );
    setsaveddvar( "enable_global_wind", 1 );
    setsaveddvar( "wind_global_vector", "-110 -150 -110" );
    setsaveddvar( "wind_global_low_altitude", -175 );
    setsaveddvar( "wind_global_hi_altitude", 4000 );
    setsaveddvar( "wind_global_low_strength_percent", 0.5 );
    setsaveddvar( "r_outdoorfeather", "8" );

    switch ( mapname )
    {
        case "mp_la":
            setsaveddvar( "wind_global_vector", "-80 115 -165" );
            break;
        case "mp_socotra":
            setsaveddvar( "wind_global_vector", "-150 -145 -150" );
            break;
        case "mp_dockside":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_carrier":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_nightclub":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_overflow":
            setsaveddvar( "wind_global_vector", "-130 -130 -130" );
            break;
        case "mp_turbine":
            setsaveddvar( "wind_global_vector", "-200 -230 -200" );
            break;
        case "mp_slums":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_drone":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_express":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_hijacked":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_meltdown":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_raid":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_village":
            setsaveddvar( "wind_global_vector", "-120 -115 -120" );
            break;
        case "mp_nuketown_2020":
            setsaveddvar( "wind_global_vector", "-135 -135 -135" );
            break;
        case "mp_mirage":
            setsaveddvar( "wind_global_vector", "-145 -145 -145" );
            break;
        case "mp_skate":
            setsaveddvar( "wind_global_vector", "-145 -175 -160" );
            break;
        case "mp_hydro":
            setsaveddvar( "wind_global_vector", "1 0 0" );
            break;
        case "mp_downhill":
            setsaveddvar( "wind_global_vector", "-145 -145 -145" );
            break;
        case "mp_studio":
            setsaveddvar( "wind_global_vector", "-160 -149 160" );
            break;
        case "mp_vertigo":
            setsaveddvar( "wind_global_vector", "197 -215 95" );
            break;
        case "mp_magma":
            setsaveddvar( "wind_global_vector", "-125 -115 -125" );
            break;
        case "mp_concert":
            setsaveddvar( "wind_global_vector", "-125 -125 -125" );
            break;
        case "mp_uplink":
            setsaveddvar( "wind_global_vector", "-155 -155 -155" );
            break;
        case "mp_castaway":
            setsaveddvar( "wind_global_vector", "-55 -120 -110" );
            break;
        case "mp_takeoff":
            setsaveddvar( "wind_global_vector", "-210 -210 -210" );
            break;
        case "mp_pod":
            setsaveddvar( "wind_global_vector", "-90 -140 -95" );
            break;
        case "mp_dig":
            setsaveddvar( "wind_global_vector", "-105 -105 -105" );
            break;
    }
}

global_fx( targetname, fxname, fxfile, delay, soundalias )
{
    ents = getstructarray( targetname, "targetname" );

    if ( !isdefined( ents ) )
        return;

    if ( ents.size <= 0 )
        return;

/#
    if ( getdvarint( #"debug_fx" ) > 0 )
        println( "*** Client : _global_FX - creating " + ents.size + " globalFX " + fxname );
#/

    for ( i = 0; i < ents.size; i++ )
    {
        ent = ents[i] global_fx_create( fxname, fxfile, delay, soundalias );

        if ( !isdefined( ents[i].script_noteworthy ) )
            continue;

        note = ents[i].script_noteworthy;

        if ( !isdefined( level._global_fx_ents[note] ) )
            level._global_fx_ents[note] = [];

        level._global_fx_ents[note][level._global_fx_ents[note].size] = ent;
    }
}

global_fx_create( fxname, fxfile, delay, soundalias )
{
    if ( !isdefined( level._effect ) )
        level._effect = [];

    if ( !isdefined( level._effect[fxname] ) )
        level._effect[fxname] = loadfx( fxfile );

    if ( !isdefined( self.angles ) )
        self.angles = ( 0, 0, 0 );

    ent = clientscripts\mp\_fx::createoneshoteffect( fxname );
    ent.v["origin"] = self.origin;
    ent.v["angles"] = self.angles;
    ent.v["fxid"] = fxname;
    ent.v["delay"] = delay;

    if ( isdefined( soundalias ) )
        ent.v["soundalias"] = soundalias;

    return ent;
}
