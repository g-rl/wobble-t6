// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;
#include clientscripts\mp\_fx;
#include clientscripts\mp\zombies\_zm_utility;
#include clientscripts\mp\zm_tomb;

init()
{
    if ( getdvar( #"createfx" ) == "on" )
        return;

    registerclientfield( "scriptmover", "staff_blizzard_fx", 14000, 1, "int", ::staff_blizzard_fx, 1 );
    registerclientfield( "actor", "attach_bullet_model", 14000, 1, "int", ::attach_model );
    level._effect["staff_water_blizzard"] = loadfx( "weapon/zmb_staff/fx_zmb_staff_ice_ug_impact_hit" );
    level._effect["staff_water_ice_shard"] = loadfx( "weapon/zmb_staff/fx_zmb_staff_ice_trail_bolt" );
    level._effect["staff_water_shatter"] = loadfx( "weapon/zmb_staff/fx_zmb_staff_ice_exp" );
    registerclientfield( "actor", "anim_rate", 14000, 2, "float", undefined, 0 );
    setupclientfieldanimspeedcallbacks( "actor", 1, "anim_rate" );
}

attach_model( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
    if ( newval == 1 )
    {
        if ( isdefined( self.ice_shard_fx ) )
            stopfx( localclientnum, self.ice_shard_fx );

        self.ice_shard_fx = playfxontag( localclientnum, level._effect["staff_water_ice_shard"], self, "j_spine4" );
        self thread ice_freeze_fx( localclientnum );
        self playsound( 0, "wpn_waterstaff_freeze_zombie" );
    }
    else
    {
        if ( isdefined( self.ice_shard_fx ) )
        {
            stopfx( localclientnum, self.ice_shard_fx );
            self.ice_shard_fx = undefined;
        }

        self thread ice_unfreeze( localclientnum );
    }
}

ice_freeze_fx( localclientnum )
{
    self endon( "entityshutdown" );
    self endon( "unfreeze" );
    success = self mapshaderconstant( localclientnum, 2, "scriptVector3" );
    max_charamount = 0.9;
    rate = randomfloatrange( 0.005, 0.01 );

    for ( f = 0.6; f <= max_charamount; f = f + 0.01 )
    {
        self setshaderconstant( localclientnum, 2, f, 1, 0, 0 );
        serverwait( localclientnum, 0.05 );
    }
}

ice_unfreeze( localclientnum )
{
    self endon( "entityshutdown" );
    self notify( "unfreeze" );

    for ( f = 1.0; f >= 0.6; f = f - 0.05 )
    {
        self setshaderconstant( localclientnum, 2, f, 1, 0, 0 );
        serverwait( localclientnum, 0.05 );
    }

    self setshaderconstant( localclientnum, 2, 0, 0, 0, 0 );
}

staff_blizzard_fx( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
    if ( newval == 1 )
    {
        self.ice_fx = playfxontag( localclientnum, level._effect["staff_water_blizzard"], self, "tag_origin" );

        if ( !isdefined( self.sndent ) )
        {
            self.sndent = spawn( 0, self.origin, "script_origin" );
            self.sndent playsound( 0, "wpn_waterstaff_storm_imp" );
            self.sndent playloopsound( "wpn_waterstaff_storm" );
            self.sndent thread clientscripts\mp\zm_tomb::snddemojumpmonitor();
        }
    }
    else
    {
        if ( isdefined( self.ice_fx ) )
            stopfx( localclientnum, self.ice_fx );

        if ( isdefined( self.sndent ) )
        {
            self.sndent stoploopsound( 1.5 );
            self.sndent delete();
            self.sndent = undefined;
        }
    }
}
